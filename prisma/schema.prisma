// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  userName  String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Product {
  id          String      @id @default(uuid())
  name        String
  price       Int
  image       String
  description String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  isFeatured  Boolean     @default(false)
  orderItems  OrderItem[]
}

model Order {
  id          String      @id @default(uuid())
  status      OrderStatus @default(PENDING)
  totalAmount Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  items       OrderItem[]
  user        User?       @relation(fields: [userId], references: [id])
  userId      String?
}

model OrderItem {
  id        String   @id @default(uuid())
  quantity  Int
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  price     Int
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}
